<?xml version="1.0" encoding="UTF-8"?>
<testCase id="org.hbbtv_APP2APP0395" version="1"
          xmlns="http://www.hbbtv.org/2012/B/testCase"
          xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          xsi:schemaLocation="http://www.hbbtv.org/2012/B/testCase ../../RES/testCase.xsd">
    <originInformation>
        <contributor part="assertion" company="HbbTV" contact="info@hbbtv.org"/>
        <contributor part="procedure" company="Eurofins Digital Testing" contact="DigitalTesting@eurofins.com"/>
        <contributor part="implementation" company="Eurofins Digital Testing" contact="DigitalTesting@eurofins.com" license="Commercial. Copyright Eurofins Digital Testing"/>
    </originInformation>
    <title>App2App - Initiating disconnection of clients (disconnect)</title>
    <appliesTo>
        <spec name="HBBTV" version="1.3.1"/>
    </appliesTo>
    <specReference name="HBBTV" version="1.3.1">
        <specSection chapter="14.5.5">
            If the remote client [...] disconnects without sending a Close frame, the terminal shall commence the process of disconnecting the client. In addition, it shall close the corresponding paired WebSocket connection that was made by the application to the local service endpoint. In normal operation the terminal should indefinitely maintain the pair of connections and relay messages as described above. However, if the terminal has initiated the closure of the connection to either client for whatever reason, then it shall close both connections in the pair.
        </specSection>
    </specReference>
    <assertionText>
        After a local and a remote client have been paired and subsequently the remote client disconnects without sending a close frame to the app2app service, the terminal disconnects both of the clients by sending a corresponding close frame.
    </assertionText>
    <preconditions/>
    <testProcedure>
        <testStep>
            <procedure>Create a reference to the HbbTVCSManager embedded object</procedure>
        </testStep>
        <testStep>
            <procedure>Obtain the local app2app URL from the HbbTVCSManager instance by calling getApp2AppLocalBaseURL()</procedure>
        </testStep>
        <testStep>
            <procedure>Obtain the remote app2app URL from the HbbTVCSManager instance by calling getApp2AppRemoteBaseURL()</procedure>
        </testStep>
        <testStep>
            <procedure>Attempt to open the local App2App web socket by creating a new web socket object using 'new WebSocket(url)', passing in a 'url' parameter which is composed of the App2App local base URL and the app end point</procedure>
            <expectedBehaviour>The 'onopen' event is fired for the local web socket</expectedBehaviour>
        </testStep>
        <testStep>
            <procedure>Attempt to open the remote App2App web socket, by calling 'testAPI.openWebSocket(url)', passing in a 'url' parameter which is composed of the result of the App2App remote base URL and the app end point</procedure>
            <expectedBehaviour>The 'onConnect' callback for the remote web socket is called</expectedBehaviour>
        </testStep>
        <testStep>
            <procedure>Wait for a 'pairingcompleted' message to be received on the local web socket</procedure>
            <expectedBehaviour>An 'onmessage' event is fired fired for the local web socket, with the event containing the string 'pairingcompleted'</expectedBehaviour>
        </testStep>
        <testStep>
            <procedure>Wait for a 'pairingcompleted' message to be received on the remote web socket</procedure>
            <expectedBehaviour>The 'onMessage' callback is called for the remote web socket, with the parameter containing the string 'pairingcompleted'</expectedBehaviour>
        </testStep>
        <testStep>
            <procedure>Close the remote socket by calling 'tcpClose()' on the remote web socket client, passsing in an 'onTcpClose' callback</procedure>
            <expectedBehaviour>The 'onclose' event is fired for the local web socket, and the 'onTcpClose' callback is called</expectedBehaviour>
        </testStep>
    </testProcedure>
    <passCriteria>
        When the remote client disconnects without sending a close frame, the terminal disconnects both of the clients by sending a corresponding close frame.
    </passCriteria>
    <history>
        <historyItem name="HbbTV" date="2014-12-11" part="assertion" type="accepted"/>
        <historyItem name="HbbTV" date="2015-08-19" part="procedure" type="submitted"/>
        <historyItem name="HbbTV" date="2015-11-25" part="implementation" type="submitted"/>
    </history>
</testCase>
