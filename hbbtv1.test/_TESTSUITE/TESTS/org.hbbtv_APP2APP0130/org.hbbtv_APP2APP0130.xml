<?xml version="1.0" encoding="UTF-8"?>
<testCase id="org.hbbtv_APP2APP0130" version="1"
          xmlns="http://www.hbbtv.org/2012/B/testCase"
          xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          xsi:schemaLocation="http://www.hbbtv.org/2012/B/testCase ../../RES/testCase.xsd">
    <originInformation>
        <contributor part="assertion" company="HbbTV" contact="info@hbbtv.org"/>
        <contributor part="procedure" company="Eurofins Digital Testing" contact="DigitalTesting@eurofins.com"/>
        <contributor part="implementation" company="Eurofins Digital Testing" contact="DigitalTesting@eurofins.com" license="Commercial. Copyright Eurofins Digital Testing"/>
    </originInformation>
    <title>App2App - Max concurrent connections</title>
    <appliesTo>
        <spec name="HBBTV" version="1.3.1"/>
    </appliesTo>
    <specReference name="HBBTV" version="1.3.1">
        <specSection chapter="14.5.3">
            The terminal shall support a minimum of 10 concurrent WebSocket connections from clients to the local service endpoint from local HbbTV applications and, simultaneously, a minimum of 10 concurrent WebSocket connections from clients to the remote service endpoint from other terminals or companion screen applications.
        </specSection>
        <specSection chapter="14.5.4">
            The WebSocket URL that a client connects to when using either service end-point is formed by concatenating the base WebSocket URL for that service end-point with an application specific suffix. This suffix is referred to in the present document as the app-endpoint.
        </specSection>
        <specSection chapter="14.5.5">
            When connections from two clients enter into a state of being paired to each other, the terminal shall immediately inform both clients by sending them a Data frame of type Text (as defined by the WebSocket protocol specification clause 5.6 [40]) with as Payload data the UTF-8 encoded text 'pairingcompleted'.
        </specSection>
    </specReference>
    <assertionText>
        When 10 companion screen applications running on 10 different terminals connect to the remote endpoint of the app2app service with the app-endpoint "myapp.mychannel.org/?pairing" and subsequently an HbbTV application opens 10 connections to the local app2app service end-point using the same app-endpoint, the terminal shall pair each connection from the local client with one of the waiting remote connections and it shall send a UTF-8 encoded message 'pairingcompleted' to each client connection.
    </assertionText>
    <preconditions/>
    <testProcedure>
        <testStep>
            <procedure>Create a reference to the HbbTVCSManager</procedure>
        </testStep>
        <testStep>
            <procedure>Call getApp2AppLocalBaseURL() to obtain the local App2App URLs from the HbbTVCSManager instance</procedure>
        </testStep>
        <testStep>
            <procedure>Call getApp2AppRemoteLocalBaseURL() to obtain the remote App2App URLs from the HbbTVCSManager instance</procedure>
        </testStep>
        <testStep>
            <procedure>Call testAPI.openWebsocket() 10 times to open 10 remote App2App web sockets using the app2app remote base URL retrieved concatenated with the application endpoint string "myapp.mychannel.org/?pairing" as the 'url' parameter</procedure>
            <expectedBehaviour>The 'onConnect' event for each of the 10 remote web socket triggers the associated callback</expectedBehaviour>
        </testStep>
        <testStep>
            <procedure>Open a local App2App web socket using the app2app local base URL retrieved concatenated with the application endpoint string "myapp.mychannel.org/?pairing"</procedure>
            <expectedBehaviour>The 'onopen' event for the local web socket triggers the associated callback</expectedBehaviour>
        </testStep>
        <testStep>
            <procedure>Wait for a 'pairingcompleted' message to be received on the local web socket</procedure>
            <expectedBehaviour>An 'onmessage' event is fired for the local web socket, with the event containing the string 'pairingcompleted'</expectedBehaviour>
        </testStep>
        <testStep>
            <procedure>Wait for a 'pairingcompleted' message to be received on the remote web socket</procedure>
            <expectedBehaviour>The 'onMessage' callback is called for the remote web socket, with the parameter containing the string 'pairingcompleted'</expectedBehaviour>
        </testStep>
        <testStep>
            <procedure>Repeat the previous 3 steps 10 times</procedure>
        </testStep>
    </testProcedure>
    <passCriteria>
        The terminal paired each connection from the local client with one of the waiting remote connections and sent a UTF-8 encoded message 'pairingcompleted' to each client connection when 10 companion screen applications running on 10 different terminals connected to the remote endpoint of the app2app service with the app-endpoint "myapp.mychannel.org/?pairing" and subsequently an HbbTV application opened 10 connections to the local app2app service end-point using the same app-endpoint.
    </passCriteria>
    <history>
        <historyItem name="HbbTV" date="2014-12-11" part="assertion" type="accepted"/>
        <historyItem name="HbbTV" date="2015-09-09" part="procedure" type="submitted"/>
        <historyItem name="HbbTV" date="2015-11-25" part="implementation" type="submitted"/>
    </history>
</testCase>
