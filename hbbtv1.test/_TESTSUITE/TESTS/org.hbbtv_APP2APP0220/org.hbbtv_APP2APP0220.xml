<?xml version="1.0" encoding="UTF-8"?>
<testCase id="org.hbbtv_APP2APP0220" version="1"
          xmlns="http://www.hbbtv.org/2012/B/testCase"
          xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          xsi:schemaLocation="http://www.hbbtv.org/2012/B/testCase ../../RES/testCase.xsd">
    <originInformation>
        <contributor part="assertion" company="HbbTV" contact="info@hbbtv.org"/>
        <contributor part="procedure" company="Eurofins Digital Testing" contact="DigitalTesting@eurofins.com"/>
        <contributor part="implementation" company="Eurofins Digital Testing" contact="DigitalTesting@eurofins.com" license="Commercial. Copyright Eurofins Digital Testing"/>
    </originInformation>
    <title>App2App - Waiting connection</title>
    <appliesTo>
        <spec name="HBBTV" version="1.3.1"/>
    </appliesTo>
    <specReference name="HBBTV" version="1.3.1">
        <specSection chapter="14.5.4">
            The terminal shall pair two waiting connections according to the following rules: [...] The app-endpoint portion of the resource name used in the client handshake request shall match between both waiting connections. [...] The WebSocket URL that a client connects to when using either service end-point is formed by concatenating the base WebSocket URL for that service end-point with an application specific suffix. This suffix is referred to in the present document as the app-endpoint.
        </specSection>
        <specSection chapter="14.5.5">
            When connections from two clients enter into a state of being paired to each other, the terminal shall immediately inform both clients by sending them a Data frame of type Text (as defined by the WebSocket protocol specification clause 5.6 [40]) with as Payload data the UTF-8 encoded text 'pairingcompleted'. The connections are now both considered to be open, and the clients to be paired.
        </specSection>
    </specReference>
    <assertionText>
        If a HbbTV application connects to the local endpoint of the app2app service with the app endpoint "myapp.mychannel.org/?pairing_1" and then a companion screen application connects to the remote endpoint with the app endpoint "myapp.mychannel.org/?pairing_2", the terminal will open a Web Socket connection for both, the terminal will not pair them, i.e. no message "pairingcompleted" is sent, but keep them in a waiting state and if after some time a second companion screen application connects with the app-endpoint "myapp.mychannel.org/?pairing_1" the terminal will pair this connection with the waiting connection from the HbbTV application and send a "pairingcompleted" message to both ends of the newly paired clients.
    </assertionText>
    <preconditions/>
    <testProcedure>
        <testStep>
            <procedure>Create a reference to the HbbTVCSManager embedded object</procedure>
        </testStep>
        <testStep>
            <procedure>Obtain the local app2app URL from the HbbTVCSManager instance by calling getApp2AppLocalBaseURL()</procedure>
        </testStep>
        <testStep>
            <procedure>Obtain the remote app2app URL from the HbbTVCSManager instance by calling getApp2AppRemoteBaseURL()</procedure>
        </testStep>
        <testStep>
            <procedure>Attempt to open the local app2app web socket using the app2app local base URL retrieved concatenated with the application endpoint string "myapp.mychannel.org/?pairing_1" as the 'url' parameter</procedure>
            <expectedBehaviour>The 'onopen' event is fired for the local web socket</expectedBehaviour>
        </testStep>
        <testStep>
            <procedure>Once the local app2app web socket is opened, attempt to open the first remote app2app web socket by calling the openWebsocket() method using the app2app remote base URL retrieved concatenated with the application endpoint string "myapp.mychannel.org/?pairing_2" as the 'url' parameter</procedure>
            <expectedBehaviour>The onConnect() callback for the first remote web socket is called</expectedBehaviour>
        </testStep>
        <testStep>
            <procedure>Once the first remote app2app web socket is opened, attempt to open the second remote app2app web socket by calling the openWebsocket() method using the Apapp2appp2App remote base URL concatenated with the application endpoint string "myapp.mychannel.org/?pairing_1" as the 'url' parameter</procedure>
            <expectedBehaviour>The onConnect() callback for the second remote web socket is called and both the local and the second remote web sockets receive a "pairingcompleted" message through the onmessage() and onMessage() callbacks respectively</expectedBehaviour>
        </testStep>
    </testProcedure>
    <passCriteria>
        When an HbbTV application connected to the local endpoint of the app2app service with the app endpoint "myapp.mychannel.org/?pairing_1" and then a companion screen application connected to the remote endpoint with the app endpoint "myapp.mychannel.org/?pairing_2", the terminal opened a Web Socket connection for both, did not pair them and kept them in a waiting state. When after some time a second companion screen application connects with the app-endpoint "myapp.mychannel.org/?pairing_1", the terminal did pair this connection with the waiting connection from the HbbTV application and sent a "pairingcompleted" message to both ends of the newly paired clients.
    </passCriteria>
    <history>
        <historyItem name="HbbTV" date="2014-12-11" part="assertion" type="accepted"/>
        <historyItem name="HbbTV" date="2015-09-09" part="procedure" type="submitted"/>
        <historyItem name="HbbTV" date="2015-11-25" part="implementation" type="submitted"/>
    </history>
</testCase>
